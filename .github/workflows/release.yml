on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        php-version: [ '7.4', '8.0' ]
        alpine-version: [ '3.10', '3.11', '3.12', '3.13', '3.14' ]
        exclude:
          - php-version: '8.0'
            alpine-version: '3.10'
      max-parallel: 8
      fail-fast: false
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      ALPINE_VERSION: ${{ matrix.alpine-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: ./build.sh
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ./build/jieba-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_name: jieba-${{ matrix.php-version }}-alpine-v${{ matrix.alpine-version }}.so
          asset_content_type: application/octet-stream
